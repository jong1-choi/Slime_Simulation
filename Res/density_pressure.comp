#version 460 core
layout( local_size_x = 1) in;

#define NUM_PARTICLES 125
#define PI 3.14159265f
#define REST_DENSITY 1000.f
#define H 1.f
#define GAS_CONSTANT 300.f
#define MASS 1.f

const float poly6	  =  315.f / (64.f * PI * H * H * H * H * H * H * H * H * H);
const float h2		  =  H * H;

layout (std430, binding = 0) buffer position_buf
{
	vec4 position[];
};

layout (std430, binding = 1) buffer velocity_buf
{
	vec4 velocity[];
};

layout (std430, binding = 2) buffer force_buf
{
	vec4 force[];
};

layout (std430, binding = 3) buffer density_buf
{
	vec4 density[];
};

layout (std430, binding = 4) buffer pressure_buf
{
	vec4 pressure[];
};

void main(void) {
	uint i = gl_GlobalInvocationID.x;
	float densitySum = 0.f;
	for (uint j = 0; j < NUM_PARTICLES; j++) {
		if (i == j) continue;

		float diff = length(position[i].xyz - position[j].xyz);
		if (diff > H) continue;
		
		densitySum += MASS * poly6 * (h2 - diff * diff) * (h2 - diff * diff) * (h2 - diff * diff);
	}
	density[i].x = densitySum + REST_DENSITY;
	pressure[i].x = GAS_CONSTANT * densitySum;
}


